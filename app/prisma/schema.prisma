// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Network {
  ETHEREUM
  POLYGON
  GNOSIS
  BASE
  GOERLI
  OPTIMISM
  SEPOLIA
}

enum NetworkStatus {
  PENDING
  CONFIRMED
  FAILED
}

enum UserType {
  MINION
  ARTIST
}

model User {
  id              String   @id @default(uuid())
  privyId         String?   @unique // userId coming from privy
  imageUrl        String?
  nickname        String?
  email           String?
  walletAddresses String[]
  twitterUsername String?
  twitterSubject  String?
  twitterName     String?
  twitterImageUrl String?
  userType        UserType @default(MINION)
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
  domain          String?  @unique 
  funded          Boolean? @default(false)
}

model Order {
  orderId               String         @id @default(uuid())
  userId                String         @default("") // generated userId by prisma
  privyUserId           String         @default("") // userId coming from privy
  campaignId            String
  collectionNetwork     Network
  collectionAddress     String
  selectedTokenId       String
  personalNote          String?
  transactionId         String?
  mintedTokenId         String?
  mintedNetworkId       Network?
  mintedContractAddress String?
  // cron job updates the following, based on the txId
  status                NetworkStatus?
  // FULFILMENT ATTRIBUTES
  autographData         String?
  autographDataURL      String?
  metadataUrl           String? // after uploading to a decentralised storage
  // TO UPLOAD
  nftImageURL           String?
  toUpload              String? // the generated image that the collector will see
  createdAt             DateTime       @default(now())
  updatedAt             DateTime       @default(now()) @updatedAt

  @@index([userId, status], name: "userId_status_index")
  @@index([privyUserId, status], name: "privyUserId_status_index")
}

model Campaign {
  campaignId      String   @id @default(uuid())
  userId          String   @default("") // generated userId by prisma
  createdAt       DateTime @default(now())
  networkId       Network  @default(ETHEREUM)
  defaultURI      String?
  binderContract  String?
  manifestUrl     String?
  name            String?
  landingImageUrl String?
}

model CampaignWhiteList {
  campaignId      String
  createdAt       DateTime @default(now())
  networkId       Network  @default(ETHEREUM)
  contractAddress String
  tokenId         String   @default("") // empty string means all tokens

  @@unique([campaignId, networkId, contractAddress, tokenId])
}

model Nft {
  networkId       Network @default(ETHEREUM)
  contractAddress String
  tokenId         String
  tokenUri        String?

  @@unique([networkId, contractAddress, tokenId])
}
